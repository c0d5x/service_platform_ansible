#
# {{ item.desc }}
#
# All name-based SSL virtual hosts get their SSL configuration
# from whichever of them is loaded first.
# We don't know in which order the SSL virtual hosts get loaded,
# so every one of them must contain the same SSL configuration.

<VirtualHost {{ public_ipv4_address }}:80>
  ServerName "{{ item.fqdn | mandatory }}:80"
  Redirect / https://{{ item.fqdn }}/
</VirtualHost>

<VirtualHost {{ public_ipv4_address }}:443>

ServerName {{ item.fqdn | mandatory }}:443

{% if websites is defined and item.fqdn in websites %}
DocumentRoot "/var/www/{{ item.fqdn }}/htdocs"
<Directory "/var/www/{{ item.fqdn }}/htdocs">
    Options None
    AllowOverride None
    Require all granted
</Directory>
{% endif %}

{% if item.proxies is defined %}
ProxyRequests Off
ProxyPreserveHost On
AllowEncodedSlashes NoDecode

RequestHeader set X-Forwarded-Proto "https"
RequestHeader set X-Forwarded-Port "443"

{% for proxy in item.proxies %}

#
# Proxy: https://{{ item.fqdn }}/{{ proxy.context | mandatory }}
# Backend: http://{{ proxy.backend_host }}/{{ proxy.backend_context }}
#
ProxyPass /{{ proxy.context | mandatory }} http://{{ proxy.backend_host | mandatory }}/{{ proxy.backend_context | mandatory }} nocanon
ProxyPassReverse /{{ proxy.context }} http://{{ proxy.backend_host }}/{{ proxy.backend_context }}
ProxyPassReverse /{{ proxy.context }} http://{{ item.fqdn }}/{{ proxy.backend_context }}
{% if proxy.backend_context != proxy.context %}
ProxyPassReverseCookiePath /{{ proxy.backend_context }} /{{ proxy.context }}
{% endif %}
{% endfor %}
{% endif %}

ErrorLog logs/{{ item.fqdn }}_ssl_error_log
TransferLog logs/{{ item.fqdn }}_ssl_access_log
LogLevel warn

CustomLog logs/{{ item.fqdn }}_ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

# https://wiki.mozilla.org/Security/Server_Side_TLS

SSLEngine on
SSLCertificateFile    /etc/pki/tls/certs/_.{{ public_dns_zone | mandatory }}-crt.pem
SSLCertificateKeyFile /etc/pki/tls/private/_.{{ public_dns_zone | mandatory }}-key.pem

SSLProtocol         all -SSLv2 -SSLv3 -TLSv1
SSLCipherSuite      ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
SSLHonorCipherOrder on
SSLCompression      off

# OCSP Stapling
SSLUseStapling                   on
SSLStaplingResponderTimeout      5
SSLStaplingReturnResponderErrors off
SSLStaplingCache                 shmcb:/var/run/ocsp(128000)

# HSTS
Header add Strict-Transport-Security "max-age=15768000"

<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>

# HTTPS and Keep-Alive Connections
# http://blogs.msdn.com/b/ieinternals/archive/2011/03/26/https-and-connection-close-is-your-apache-modssl-server-configuration-set-to-slow.aspx
BrowserMatch ".*MSIE [2-5]\..*" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

</VirtualHost>
