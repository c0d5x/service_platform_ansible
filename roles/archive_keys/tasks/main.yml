# file: roles/archive_keys/tasks/main.yml

#
# PKI-based backup security
#

- name: Archive keys directory
  sudo: yes
  sudo_user: "{{ backup_user | mandatory }}"
  file: state=directory path="{{ archive_keys_path | mandatory }}"
        owner="{{ backup_user }}" group="{{ backup_user }}" mode=750

- name: Backup client private key
  sudo: yes
  sudo_user: "{{ backup_user }}"
  command: chdir={{ archive_keys_path }}
           creates="{{ ansible_fqdn }}_backup-client-private.pem"
           openssl genrsa -out "{{ ansible_fqdn }}_backup-client-private.pem"
           {{ archive_key_length | mandatory }}

- name: Backup client private key permissions
  sudo: yes
  sudo_user: "{{ backup_user }}"
  file: path="{{ archive_keys_path }}/{{ ansible_fqdn }}_backup-client-private.pem"
        owner={{ backup_user }} group={{ backup_user }} mode=0400

- name: Backup client public key
  sudo: yes
  sudo_user: "{{ backup_user }}"
  command: chdir={{ archive_keys_path }}
           creates="{{ ansible_fqdn }}_backup-client-public.pem"
           openssl rsa
           -in "{{ ansible_fqdn }}_backup-client-private.pem"
           -out "{{ ansible_fqdn }}_backup-client-public.pem"
           -outform PEM -pubout

- name: Backup client public key permissions
  sudo: yes
  sudo_user: "{{ backup_user }}"
  file: path="{{ archive_keys_path }}/{{ ansible_fqdn }}_backup-client-public.pem"
        owner={{ backup_user }} group={{ backup_user }} mode=0444

- name: Archives public key
  sudo: yes
  sudo_user: "{{ backup_user }}"
  copy: content="{{ archives_public_key | mandatory }}"
        dest="{{ archive_keys_path }}/archives-public.pem"
        owner={{ backup_user }} group={{ backup_user }} mode=0444

#
# The archives-private.pem is kept offline and generated manually.
# DO NOT copy the archives private key to /mnt/sensitive_data/.
#
